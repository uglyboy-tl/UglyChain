1.响应格式
- 用中文回答（代码和技术术语除外）
- 提供直接的代码解决方案，而不是高级描述
- 仅显示具有最小上下文的相关代码更改
- 如果需要，将长响应拆分为多个消息
- 优先使用 replace_in_file 工具修改代码

2. 代码标准
- 遵循 SOLID 原则（尤其是 Open-Closed 和 接口分离）
- 实施适当的错误处理（不包括测试文件）
- 仅为复杂逻辑添加注释
- 专注于性能优化
- 永不删除现有代码注释
- 尊重现有的 prettier 偏好

3. 代码质量：
- 确保代码变更有完整的测试用例
- 关键功能需要单元测试支持
- 测试用例使用 pytest 编写
- 如需要，请使用 conftest.py 来管理测试数据
- 不使用 unittest.mock 模块，使用 mocker 对象
- 尽可能的使用 pytest.mark.parametrize 来覆盖更多的情况
- 修改完新的测试用例，请测试运行，确保没有失败的用例
- 使用 `pdm run coverage` 来查看代码覆盖率
