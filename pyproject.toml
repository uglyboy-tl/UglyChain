[project]
name = "UglyChain"
version = "1.0.5"
description = "Default template for PDM package"
authors = [
    {name = "Uglyboy", email = "uglyboy@uglyboy.cn"},
]
dependencies = ["pydantic>=2.0.0", "rich>=13.9.4", "aisuite[openai]>=0.1.7", "mcp>=1.2.0"]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[dependency-groups]
dev = [
    "ruff>=0.8.4",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.49",
    "mkdocstrings[python]>=0.27.0",
    "mkdocs-static-i18n[material]>=1.2.3",
]


[tool.codespell]
skip = 'src/data/*'

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
explicit_package_bases = true
follow_imports = "silent"
ignore_missing_imports = true
mypy_path = "src"
namespace_packages = true

[tool.ruff]
fix = true
line-length = 120  # YOLO
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.format]
indent-style = "space"  # Like Black, indent with spaces, rather than tabs.
line-ending = "auto"  # Like Black, automatically detect the appropriate line ending.
quote-style = "double"  # Like Black, use double quotes for strings.
skip-magic-trailing-comma = false  # Like Black, respect magic trailing commas.

[tool.ruff.lint]
ignore = [
    "B905",  # `zip()` without an explicit `strict=` parameter
    "E402",  # module level import not at top of file
    "E501",  # conflicts with black
]
select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "PTH",  # flake8-pathlib
    "UP",  # pyupgrade
    "W",  # pycodestyle warnings
]
unfixable = [
    "B018",  # automatic fix might obscure issue
    "F601",  # automatic fix might obscure issue
    "F602",  # automatic fix might obscure issue
    "UP036",  # sometimes it's better to just noqa this
]

[tool.ruff.lint.isort]
forced-separate = ["tests"]
known-first-party = ["uglychain"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401", "F403"]
"/*.py" = ["F401", "F403"]
"tests/*" = ["B"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pdm]
distribution = true

[tool.pdm.scripts]
lint = "pre-commit run --all-files"
coverage = "pytest --cov=src --cov-report=term-missing"
docs = "mkdocs serve"
docs-build = "mkdocs build"
docs-deploy = "mkdocs gh-deploy"
