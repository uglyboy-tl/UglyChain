[tool.poetry]
name = "uglychain"
version = "0.1.13"
description = "UglyChain：更好用的 LLM 应用构建工具"
license = "MIT"
authors = ["uglyboy <uglyboy@uglyboy.cn>"]
readme = "README.md"
repository = "https://github.com/uglyboy-tl/uglychain"
documentation = "https://uglychain.uglyboy.cn"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.0.2"
loguru = "^0.7.2"
tenacity = "^8.2.3"
pathos = "^0.3.1"
requests = "^2.31.0"
docstring-parser = "^0.15"
pydantic-yaml = "^1.2.1"
pyyaml = "^6.0.1"
python-frontmatter = "^1.1.0"
aisuite = "^0.1.6"
openai = {version ="^1.1.0", extras = ["openai"], optional = true}
dashscope = {version = "^1.14.1", extras = ["dashscope"], optional = true}
zhipuai = {version = "^2.0.1", extras = ["chatglm"], optional = true}
ollama = {version = "^0.1.6", extras = ["ollama"], optional = true}
websockets = {version = "^12.0", optional = true, extras = ["sparkapi"]}
google-generativeai = {version = "^0.3.2", extras = ["gemini"], optional = true}
jieba-fast = {version = "^0.53", extras = ["bm25"], optional = true}
ipykernel = {version ="^6.26.0", extras = ["ipython"], optional = true}
llama-index-core = {version = "^0.10.1", python=">=3.8.1,<3.12", extras = ["llama-index"], optional = true}
llama-index-embeddings-openai = {version = "^0.1.0", python=">=3.8.1,<3.12", extras = ["llama-index"], optional = true}


[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
ruff = "^0.8.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.6"
mkdocs-git-revision-date-plugin = "^0.3.2"

[tool.poetry.extras]
openai = ["openai"]
dashscope = ["dashscope"]
chatglm = ["zhipuai"]
sparkapi = ["websockets"]
ollama = ["ollama"]
gemini = ["google-generativeai"]
bm25 = ["jieba-fast"]
ipython = ["ipykernel"]
llama-index = ["llama-index-core", "llama-index-embeddings-openai"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.ruff]
line-length = 120 # YOLO
target-version = "py310"
src = ["src", "tests"]
fix = true

[tool.ruff.lint]
select = [
    "F",    # pyflakes
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "PTH",  # flake8-pathlib
    "UP",   # pyupgrade
]

ignore = [
    "B905", # `zip()` without an explicit `strict=` parameter
    "E402", # module level import not at top of file
    "E501", # conflicts with black
    "PTH123",   # Path.open() should be used
]

unfixable = [
    "F601",  # automatic fix might obscure issue
    "F602",  # automatic fix might obscure issue
    "B018",  # automatic fix might obscure issue
    "UP036", # sometimes it's better to just noqa this
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["B"]

[tool.ruff.lint.isort]
forced-separate = ["tests"]
known-first-party = ["uglychain"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.format]
quote-style = "double"  # Like Black, use double quotes for strings.
indent-style = "space"  # Like Black, indent with spaces, rather than tabs.
skip-magic-trailing-comma = false   # Like Black, respect magic trailing commas.
line-ending = "auto"    # Like Black, automatically detect the appropriate line ending.

[[tool.poetry.source]]
name = "my_mirror"
url = "https://mirrors.huaweicloud.com/repository/pypi/simple"
default = false
secondary = false